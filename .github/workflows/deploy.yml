name: Deploy to GitHub Pages

on:
  push:
    branches: [main, master]   # ← main と master 両方
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1) ソース取得
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2) Node.js セットアップ
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      # 3) GitHub Pages 設定
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v4

      # 4) (任意) キャッシュ復元
      - name: Restore Nuxt cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules         # 依存モジュール
            .output              # ビルド成果物 (再生成を早くする)
          key: nuxt-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: nuxt-${{ runner.os }}-

      # 5) 依存関係インストール
      - name: Install dependencies
        run: npm ci

      # 6) 静的サイトを生成
      - name: Generate static site with Nuxt
        run: |
          echo "==> nuxt generate start"
          npx nuxi generate        # Nuxt3 / Nuxt2 の場合は npm run generate
        env:
          NODE_ENV: production
          NODE_OPTIONS: --max-old-space-size=4096

      # 7) ビルド内容の確認 (デバッグ用)
      - name: Inspect build output
        run: |
          du -sh .output || true
          ls -la .output | head -n 20
          echo "------ .output/public preview ------"
          ls -la .output/public | head -n 20

      # 8) GitHub Pages 用にアーティファクトを整形
      - name: Prepare artifact for Pages
        run: |
          mkdir upload
          # シンボリックリンクを実体化しつつ node_modules は除外
          rsync -a --copy-links --delete \
                --exclude='node_modules' \
                .output/public/ upload/
          # Jekyll 無効化
          touch upload/.nojekyll

      # 9) アーティファクトアップロード
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./upload

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
